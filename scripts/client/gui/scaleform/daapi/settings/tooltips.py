# Embedded file name: scripts/client/gui/Scaleform/daapi/settings/tooltips.py
from gui.shared.tooltips import vehicle, tankman, skill, shell, module, achievement, cybersport, common, contexts, potapovquests
TOOLTIPS = {'tankman': {'tooltip': 'ToolTipTankmenUI',
             'method': lambda invID, isCurrentVehicle = None: tankman.TankmanTooltipData(contexts.TankmanHangarContext()).buildToolTip(invID),
             'complex': None},
 'tankmanSkill': {'tooltip': 'ToolTipSkillUI',
                  'method': skill.SkillTooltipData(contexts.PersonalCaseContext(fieldsToExclude=('count',))).buildToolTip,
                  'complex': None},
 'tankmanNewSkill': {'tooltip': 'ToolTipBuySkillUI',
                     'method': skill.SkillTooltipData(contexts.NewSkillContext()).buildToolTip,
                     'complex': lambda tooltipData: tooltipData['count'] > 1 or tooltipData['level'] > 0},
 'battleStatsAchievementData': {'tooltip': 'ToolTipAchievementUI',
                                'method': achievement.AchievementTooltipData(contexts.BattleResultContext()).buildToolTip,
                                'complex': None},
 'achievement': {'tooltip': 'ToolTipAchievementUI',
                 'method': achievement.AchievementTooltipData(contexts.ProfileContext()).buildToolTip,
                 'complex': None},
 'marksOnGun': {'tooltip': 'ToolTipMarksOnGunUI',
                'method': achievement.AchievementTooltipData(contexts.ProfileContext()).buildToolTip,
                'complex': None},
 'battleStatsMarksOnGun': {'tooltip': 'ToolTipMarksOnGunUI',
                           'method': achievement.AchievementTooltipData(contexts.BattleResultMarksOnGunContext()).buildToolTip,
                           'complex': None},
 'globalRating': {'tooltip': 'ToolTipAchievementUI',
                  'method': achievement.GlobalRatingTooltipData(contexts.ProfileContext()).buildToolTip,
                  'complex': None},
 'achievementAttr': {'tooltip': 'ToolTipAchievementUI',
                     'method': None,
                     'complex': None},
 'markOfMastery': {'tooltip': 'ToolTipMarkOfMasteryUI',
                   'method': achievement.AchievementTooltipData(contexts.BattleResultMarkOfMasteryContext()).buildToolTip,
                   'complex': None},
 'carouselVehicle': {'tooltip': 'TooltipVehicleUI',
                     'method': vehicle.VehicleTooltipData(contexts.CarouselContext()).buildToolTip,
                     'complex': None},
 'inventoryVehicle': {'tooltip': 'TooltipVehicleUI',
                      'method': lambda intCD, sellPrice = 0, sellCurrency = 0, inventoryCount = 0, vehicleCount = 0: vehicle.VehicleTooltipData(contexts.InventoryContext()).buildToolTip(intCD),
                      'complex': None},
 'techtreeVehicle': {'tooltip': 'TooltipVehicleUI',
                     'method': vehicle.VehicleTooltipData(contexts.TechTreeContext()).buildToolTip,
                     'complex': None},
 'shopVehicle': {'tooltip': 'TooltipVehicleUI',
                 'method': lambda intCD, inventoryCount = 0, vehicleCount = 0: vehicle.VehicleTooltipData(contexts.ShopContext()).buildToolTip(intCD),
                 'complex': None},
 'inventoryModule': {'tooltip': 'ToolTipEquipmentUI',
                     'method': lambda intCD, sellPrice = 0, sellCurrency = 0, inventoryCount = 0, vehicleCount = 0: module.ModuleTooltipData(contexts.InventoryContext()).buildToolTip(intCD),
                     'complex': None},
 'techMainModule': {'tooltip': 'ToolTipEquipmentUI',
                    'method': lambda intCD, buyPrice = None, inventoryCount = 0, vehicleCount = 0, slotIdx = 0, eqs = None: module.ModuleTooltipData(contexts.TechMainContext()).buildToolTip(intCD, slotIdx, eqs),
                    'complex': None},
 'hangarModule': {'tooltip': 'ToolTipEquipmentUI',
                  'method': lambda intCD, buyPrice = None, inventoryCount = 0, vehicleCount = 0, slotIdx = 0: module.ModuleTooltipData(contexts.HangarContext()).buildToolTip(intCD, slotIdx),
                  'complex': None},
 'techtreeModule': {'tooltip': 'ToolTipEquipmentUI',
                    'method': module.ModuleTooltipData(contexts.TechTreeContext()).buildToolTip,
                    'complex': None},
 'shopModule': {'tooltip': 'ToolTipEquipmentUI',
                'method': lambda intCD, inventoryCount = 0, vehicleCount = 0: module.ModuleTooltipData(contexts.ShopContext()).buildToolTip(intCD),
                'complex': None},
 'shopShell': {'tooltip': 'ToolTipEquipmentUI',
               'method': lambda intCD, inventoryCount = 0, vehicleCount = 0: shell.ShellToolTipData(contexts.ShopContext()).buildToolTip(intCD),
               'complex': None},
 'hangarShell': {'tooltip': 'ToolTipEquipmentUI',
                 'method': lambda intCD, historicalBattleID = -1: shell.ShellToolTipData(contexts.HangarContext()).buildToolTip(intCD, historicalBattleID=historicalBattleID),
                 'complex': None},
 'inventoryShell': {'tooltip': 'ToolTipEquipmentUI',
                    'method': lambda intCD, sellPrice = 0, sellCurrency = 0, inventoryCount = 0, vehicleCount = 0: shell.ShellToolTipData(contexts.InventoryContext()).buildToolTip(intCD),
                    'complex': None},
 'techMainShell': {'tooltip': 'ToolTipEquipmentUI',
                   'method': lambda intCD, buyPrice = None, inventoryCount = 0, vehicleCount = 0, slotIdx = 0, eqs = None: shell.ShellToolTipData(contexts.TechMainContext()).buildToolTip(intCD, slotIdx, eqs),
                   'complex': None},
 'efficiencyParam': {'tooltip': 'ToolTipFinalStatsUI',
                     'method': common.EfficiencyTooltipData(contexts.FinalStatisticContext()).buildToolTip,
                     'complex': None},
 'igrInfo': {'tooltip': 'ToolTipIGRUI',
             'method': common.IgrTooltipData(contexts.HangarContext()).buildToolTip,
             'complex': None},
 'cyberSportSlot': {'tooltip': 'ToolTipSuitableVehicleUI',
                    'method': cybersport.CybersportSlotToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                    'complex': None},
 'cyberSportAutoSearchVehicles': {'tooltip': 'ToolTipSuitableVehicleUI',
                                  'method': cybersport.CybersportAutosearchToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                                  'complex': None},
 'cyberSportSlotSelected': {'tooltip': 'ToolTipSelectedVehicleUI',
                            'method': cybersport.CybersportSlotSelectedToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                            'complex': None},
 'cyberSportTeam': {'tooltip': 'ToolTipUnitCommandUI',
                    'method': cybersport.CybersportUnitToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                    'complex': None},
 'contact': {'tooltip': 'TooltipContactUI',
             'method': common.ContactTooltipData(contexts.ContactContext()).buildToolTip,
             'complex': None},
 'cyberSportUnitLevel': {'tooltip': 'ToolTipUnitLevelUI',
                         'method': cybersport.CybersportUnitLevelToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                         'complex': None},
 'cyberSportVehicleNotReady': {'tooltip': 'ToolTipSelectedVehicleUI',
                               'method': cybersport.CybersportSlotSelectedToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                               'complex': None},
 'rssNews': {'tooltip': 'ToolTipRSSNewsUI',
             'method': None,
             'complex': None},
 'sortieDivision': {'tooltip': 'ToolTipSortieDivisionUI',
                    'method': common.SortieDivisionTooltipData(contexts.FortificationContext()).buildToolTip,
                    'complex': None},
 'map': {'tooltip': 'ToolTipMapUI',
         'method': common.MapTooltipData(contexts.HangarContext()).buildToolTip,
         'complex': None},
 'historicalAmmo': {'tooltip': 'ToolTipHistoricalAmmoUI',
                    'method': common.HistoricalAmmoTooltipData(contexts.HangarContext()).buildToolTip,
                    'complex': None},
 'historicalModules': {'tooltip': 'ToolTipHistoricalModulesUI',
                       'method': common.HistoricalModulesTooltipData(contexts.HangarContext()).buildToolTip,
                       'complex': None},
 'historicalVehicle': {'tooltip': 'TooltipVehicleUI',
                       'method': vehicle.VehicleTooltipData(contexts.HangarContext()).buildToolTip,
                       'complex': None},
 'control': {'tooltip': 'ToolTipSettingsControlUI',
             'method': common.SettingsControlTooltipData(contexts.HangarContext()).buildToolTip,
             'complex': None},
 'clanInfo': {'tooltip': 'ToolTipClanInfoUI',
              'method': common.ClanInfoTooltipData(contexts.HangarContext()).buildToolTip,
              'complex': None},
 'fortBuildingInfo': {'tooltip': 'ToolTipFortBuildingInfoUI',
                      'method': common.ToolTipFortBuildingData(contexts.HangarContext()).buildToolTip,
                      'complex': None},
 'refSysAwards': {'tooltip': 'ToolTipRefSysAwardsUI',
                  'method': common.ToolTipRefSysAwards(contexts.HangarContext()).buildToolTip,
                  'complex': None},
 'refSysDescription': {'tooltip': 'ToolTipRefSysDescriptionUI',
                       'method': common.ToolTipRefSysDescription(contexts.HangarContext()).buildToolTip,
                       'complex': None},
 'refSysXPMultiplier': {'tooltip': 'ToolTipRefSysXPMultiplierUI',
                        'method': common.ToolTipRefSysXPMultiplier(contexts.HangarContext()).buildToolTip,
                        'complex': None},
 'actionPrice': {'tooltip': 'ToolTipComplexUI',
                 'method': common.ActionTooltipData(contexts.HangarContext()).buildToolTip,
                 'complex': lambda data: False},
 'squadSlotVehicleSelected': {'tooltip': 'ToolTipSelectedVehicleUI',
                              'method': cybersport.SquadSlotSelectedToolTipData(contexts.CyberSportUnitContext()).buildToolTip,
                              'complex': None},
 'settingsButton': {'tooltip': 'ToolTipSettingsButtonUI',
                    'method': common.SettingsButtonTooltipData(contexts.HangarContext()).buildToolTip,
                    'complex': None},
 'customizationItem': {'tooltip': 'ToolTipCustomizationItemUI',
                       'method': common.CustomizationItemTooltipData(contexts.CustomizationContext()).buildToolTip,
                       'complex': None},
 'fortWrongTime': {'tooltip': 'ToolTipComplexUI',
                   'method': common.ToolTipFortWrongTime(contexts.HangarContext()).buildToolTip,
                   'complex': lambda data: False},
 'privateQuestsTile': {'tooltip': 'ToolTipPrivateQuestsUI',
                       'method': potapovquests.PrivateQuestsTileTooltipData(contexts.PotapovQuestsTileContext()).buildToolTip,
                       'complex': None},
 'privateQuestsChain': {'tooltip': 'ToolTipPrivateQuestsUI',
                        'method': potapovquests.PrivateQuestsChainTooltipData(contexts.PotapovQuestsChainContext()).buildToolTip,
                        'complex': None},
 'mapSmall': {'tooltip': 'ToolTipMapSmallUI',
              'method': common.MapSmallTooltipData(contexts.FortificationContext()).buildToolTip,
              'complex': None},
 'fortConsumableOrder': {'tooltip': 'ToolTipEquipmentUI',
                         'method': common.FortConsumableOrderTooltipData(contexts.FortOrderContext()).buildToolTip,
                         'complex': None},
 'default': {'tooltip': 'ToolTipComplexUI',
             'method': None,
             'complex': None}}
